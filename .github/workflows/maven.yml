name: Java CI with Maven

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:

  # build:
  #
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up JDK 18
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '18'
  #       distribution: 'temurin'
  #       cache: maven
  #   - name: Build with Maven
  #     run: mvn -B package --file pom.xml

  container-job:
    runs-on: ubuntu-latest
    container: openjdk:18

    services:
      maven:
        maven:3-openjdk-18

      postgres:
        image: postgres:latest
        ports:
          - "5432:5432"
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: moviesdb

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      # - name: Set up JDK 18
      #   uses: actions/setup-java@v3
      #   with:
      #     java-version: '18'
      #     distribution: 'temurin'
      #     cache: maven

      # - name: Build with Maven
      #   run: mvn -B package --file pom.xml


      - name: Install dependencies
        run: mvn --batch-mode --update-snapshots package

      - name: Install dependencies 2
        run: maven --batch-mode --update-snapshots package

      - name: Install dependencies 3
        run: /usr/bin/maven/mvn --batch-mode --update-snapshots package

      # - name: Connect to PostgreSQL
      #   # Runs a script that creates a PostgreSQL table, populates
      #   # the table with data, and then retrieves the data.
      #   # run: node client.js
      #   # Environment variables used by the `client.js` script to create a new PostgreSQL table.
      #   env:
      #     # The hostname used to communicate with the PostgreSQL service container
      #     POSTGRES_HOST: postgres
      #     # The default PostgreSQL port
      #     POSTGRES_PORT: 5432
